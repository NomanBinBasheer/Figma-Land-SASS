@use 'sass:math';

$utilities: (
    'padding': (
      'prefix': 'p',
      'values': (
        '0': 0,
        '1': math.div($base-padding, 2),
        '2': $base-padding,
        '3': $base-padding * 2,
        '4': $base-padding * 4,
        '5': $base-padding * 6,
        '6': $base-padding * 8,
      ),
    ),

    'padding-left': (
      'prefix': 'pl',
      'values': (
        '0': 0,
        '1': math.div($base-padding, 2),
        '2': $base-padding,
        '3': $base-padding * 2,
        '4': $base-padding * 4,
        '5': $base-padding * 6,
        '6': $base-padding * 8,
      ),
    ),

    'padding-right': (
      'prefix': 'pr',
      'values': (
        '0': 0,
        '1': math.div($base-padding, 2),
        '2': $base-padding,
        '3': $base-padding * 2,
        '4': $base-padding * 4,
        '5': $base-padding * 6,
        '6': $base-padding * 8,
      ),
    ),

    'padding-top': (
      'prefix': 'pt',
      'values': (
        '0': 0,
        '1': math.div($base-padding, 2),
        '2': $base-padding,
        '3': $base-padding * 2,
        '4': $base-padding * 4,
        '5': $base-padding * 6,
        '6': $base-padding * 8,
      ),
    ),

    'padding-bottom': (
      'prefix': 'pb',
      'values': (
        '0': 0,
        '1': math.div($base-padding, 2),
        '2': $base-padding,
        '3': $base-padding * 2,
        '4': $base-padding * 4,
        '5': $base-padding * 6,
        '6': $base-padding * 8,
      ),
    ),

    'margin': (
        'prefix': 'm',
        'values': (
          '0': 0,
          '1': $base-padding,
          '2': $base-padding * 2,
          '3': $base-padding * 4,
          '4': $base-padding * 6,
          '5': $base-padding * 8,
          '6': $base-padding * 10,
        ),
    ),

    'margin-left': (
        'prefix': 'ml',
        'values': (
          '0': 0,
          '1': $base-padding,
          '2': $base-padding * 2,
          '3': $base-padding * 4,
          '4': $base-padding * 6,
          '5': $base-padding * 8,
          '6': $base-padding * 10,
        ),
    ),

    'margin-right': (
        'prefix': 'mr',
        'values': (
          '0': 0,
          '1': $base-padding,
          '2': $base-padding * 2,
          '3': $base-padding * 4,
          '4': $base-padding * 6,
          '5': $base-padding * 8,
          '6': $base-padding * 10,
        ),
    ),

    'margin-top': (
        'prefix': 'mt',
        'values': (
          '0': 0,
          '1': $base-padding,
          '2': $base-padding * 2,
          '3': $base-padding * 4,
        '3l': $base-padding * 5,
          '4': $base-padding * 6,
          '5': $base-padding * 8,
          '6': $base-padding * 10,
        ),
    ),

    'margin-bottom': (
        'prefix': 'mb',
        'values': (
          '0': 0,
          '1': $base-padding,
          '2': $base-padding * 2,
          '3': $base-padding * 4,
          '4': $base-padding * 6,
          '5': $base-padding * 8,
          '6': $base-padding * 10,
        ),
    ),


    'opacity': (
        'prefix': 'o',
        'values': (
          '10': 0.1,
          '20': 0.2,
          '30': 0.3,
          '40': 0.4,
          '50': 0.5,
          '60': 0.6,
          '70': 0.7,
          '80': 0.8,
          '90': 0.9,
        ),
    ),

    'border-radius': (
        'prefix': 'br',
        'values': (
     'default': $base-border-radius,
          'none': 0,
          'xs': math.div($base-border-radius, 4),
          'sm': math.div($base-border-radius,  2),
          'lg': $base-border-radius * 2,
          'full': 50%,
        ),
    ),

    'display': (
        'prefix': 'display',
        'values': (
          'n': none,
          'b': block,
          'f': flex,
          'i': inline,
          'i-b': inline-block,
        ),
    ),

    'text-align': (
        'prefix': 'text',
        'values': (
          'center': center,
          'left': left,
          'right': right,
        ),
    ),

    'font-size': (
        'prefix': 'font',
        'values': (
          'sm': $font-size-sm,
          'sm-md': $font-size-sm-md,
          'md': $base-font-size,
          'md-lg': $font-size-md-lg,
          'lg': $font-size-lg,
          'lg-xl': $font-size-lg-xl,
          'xl': $font-size-xl,
          'xxl': $font-size-xxl,
          'xxxl': $font-size-xxxl,
          'xxxl-md': $font-size-xxxl-md,
          'xxxxl': $font-size-xxxxl,
        ),
    ),

    'font-weight': (
        'prefix': 'font-weight',
        'values': (
          'sm': 200,
          'sm-md': 300,
          'md': 400,
          'lg': 500,
          'xl': 600,
          'xxl': 700,
          'xxxl': 800,
        ),
    ),

    'line-height': (
      'prefix': 'line-height',
      'values': (
        'sm': $line-height-sm,
        'md': $base-font-size,
        'lg': $line-height-lg,
        'xl': $line-height-xl,
        'xl-xxl': $line-height-xl * 1.3,
        'xxl': $line-height-xxl,
        'xxxl': $line-height-xxxl,
        'xxxxl': $line-height-xxxxl,
        'xxxxxl': $line-height-xxxxxl,
      ),
  ),
);


@each $property, $map in $utilities{
    $prefix: map-get($map, 'prefix');
    $values: map-get($map, 'values');

    @each $key, $val in $values{
        
      @if ($key == 'default'){
        .#{$prefix}{
            #{$property}: $val;
        }
      }
       @else{
        .#{$prefix}-#{$key}{
            #{$property}: $val;
        }

       } 
    }
}